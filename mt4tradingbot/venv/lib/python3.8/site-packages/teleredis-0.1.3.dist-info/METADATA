Metadata-Version: 2.0
Name: teleredis
Version: 0.1.3
Summary: Redis backend for Telethon session storage
Home-page: https://github.com/ezdev128/telethon-session-redis
Author: Konstantin M.
Author-email: ezdev128@yandex.com
License: MIT
Download-URL: https://github.com/ezdev128/telethon-session-redis/releases
Description-Content-Type: UNKNOWN
Keywords: telegram session sessions redis
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Python: ~=3.4
Requires-Dist: redis (>=2.0)
Requires-Dist: Telethon (>=0.17)

Telethon Redis session
===========================

A `Telethon`_ session storage implementation backed by Redis.

.. _Telethon: https://github.com/LonamiWebs/Telethon

Usage
-----
This session implementation can store multiple Sessions in the same key hive.



Installing
----------

    .. code-block:: sh

        pip3 install teleredis


Upgrading
----------

    .. code-block:: sh

        pip3 install -U teleredis


Quick start
-----------
    .. code-block:: python

        from telethon import TelegramClient
        from teleredis import RedisSession
        import redis

        # These example values won't work. You must get your own api_id and
        # api_hash from https://my.telegram.org, under API Development.
        api_id = 12345
        api_hash = '0123456789abcdef0123456789abcdef'

        redis_connector = redis.Redis(host='localhost', port=6379, db=0, decode_responses=False)
        session = RedisSession('session_name', redis_connector)
        client = TelegramClient(session, api_id, api_hash)
        client.start()



