{"version":3,"sources":["../../../src/service/main/config-validation.js"],"names":["Ajv","AjvKeys","propIs","type","func","typeof","num","str","bool","obj","app","properties","publicKeys","uniqueItems","storage","required","get","set","remove","clear","additionalProperties","api","invokeWithLayer","layer","initConnection","api_id","device_model","system_version","app_version","lang_code","dc","id","host","port","server","dev","webogram","dcList","items","schema","mtSchema","ajv","validate","compile","configValidator","config","valid","console","log","errors","map","printObj","Error","canDir","Function","arg","dir","colors"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,IAAMC,OAAO;AACXC,QAAM,EAAEC,QAAQ,UAAV,EADK;AAEXC,OAAM,EAAEH,MAAM,QAAR,EAFK;AAGXI,OAAM,EAAEJ,MAAM,QAAR,EAHK;AAIXK,QAAM,EAAEL,MAAM,SAAR,EAJK;AAKXM,OAAM,EAAEN,MAAM,QAAR;AALK,CAAb;;AAQA,IAAMO,MAAM;AACVP,QAAY,QADF;AAEVQ,cAAY;AACVC,gBAAY;AACVT,YAAa,OADH;AAEVU,mBAAa;AAFH,KADF;AAKVC,aAAS;AACPX,YAAY,QADL;AAEPY,gBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,OAAzB,CAFL;AAGPJ,kBAAY;AACVK,aAAQb,KAAKC,IADH;AAEVa,aAAQd,KAAKC,IAFH;AAGVc,gBAAQf,KAAKC,IAHH;AAIVe,eAAQhB,KAAKC;AAJH,OAHL;AASPgB,4BAAsB;AATf;AALC,GAFF;AAmBVA,wBAAsB;AAnBZ,CAAZ;;AAsBA,IAAMC,MAAM;AACVlB,QAAY,QADF;AAEVY,YAAY,CAAC,OAAD,EAAU,QAAV,CAFF;AAGVJ,cAAY;AACVW,qBAAiBnB,KAAKG,GADZ;AAEViB,WAAiBpB,KAAKG,GAFZ;AAGVkB,oBAAiBrB,KAAKG,GAHZ;AAIVmB,YAAiBtB,KAAKG,GAJZ;AAKVoB,kBAAiBvB,KAAKI,GALZ;AAMVoB,oBAAiBxB,KAAKI,GANZ;AAOVqB,iBAAiBzB,KAAKI,GAPZ;AAQVsB,eAAiB1B,KAAKI;AARZ,GAHF;AAaVa,wBAAsB;AAbZ,CAAZ;;AAgBA,IAAMU,KAAK;AACT3B,QAAY,QADH;AAETY,YAAY,CAAC,IAAD,EAAO,MAAP,CAFH;AAGTJ,cAAY;AACVoB,QAAM5B,KAAKG,GADD;AAEV0B,UAAM7B,KAAKI,GAFD;AAGV0B,UAAM9B,KAAKG;AAHD,GAHH;AAQTc,wBAAsB;AARb,CAAX;;AAWA,IAAMc,SAAS;AACb/B,QAAY,QADC;AAEbQ,cAAY;AACVwB,SAAUhC,KAAKK,IADL;AAEV4B,cAAUjC,KAAKK,IAFL;AAGV6B,YAAU;AACRlC,YAAa,OADL;AAERU,mBAAa,IAFL;AAGRyB,aAAaR;AAHL;AAHA,GAFC;AAWbV,wBAAsB;AAXT,CAAf;;AAcA,IAAMmB,SAAS;AACb5B,cAAY;AACVD,OADU;AAEVW,OAFU;AAGVa,UAHU;AAIVK,YAAUpC,KAAKM,GAJL;AAKV+B,cAAUrC,KAAKM;AALL,GADC;AAQbW,wBAAsB;AART,CAAf;;AAWA,IAAMqB,MAAM,IAAIzC,GAAJ,EAAZ;AACAC,QAAQwC,GAAR;AACA,IAAMC,WAAWD,IAAIE,OAAJ,CAAYJ,MAAZ,CAAjB;;AAEA,IAAMK,kBAAkBC,UAAU;AAChC,MAAMC,QAAQJ,SAASG,MAAT,CAAd;AACA,MAAI,CAACC,KAAL,EAAY;AACVC,YAAQC,GAAR,CAAY,eAAZ;AACAN,aAASO,MAAT,CAAgBC,GAAhB,CAAoBC,QAApB;AACA,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,CAPD;;AASA,IAAMC,SAASnD,OAAOoD,QAAP,EAAiB,KAAjB,EAAwBP,OAAxB,CAAf;AACA,IAAMI,WAAWE,SACZE,GAAD,IAASR,QAAQS,GAAR,CAAaD,GAAb,EAAkB,EAAEE,QAAQ,IAAV,EAAlB,CADI,GAEZF,GAAD,IAASR,QAAQC,GAAR,CAAYO,GAAZ,CAFb;;AAKA,eAAeX,eAAf","file":"config-validation.js","sourcesContent":["import Ajv from 'ajv'\r\nimport AjvKeys from 'ajv-keywords/keywords/typeof'\r\nimport propIs from 'ramda/src/propIs'\r\n\r\nconst type = {\r\n  func: { typeof: 'function' },\r\n  num : { type: 'number' },\r\n  str : { type: 'string' },\r\n  bool: { type: 'boolean' },\r\n  obj : { type: 'object' }\r\n}\r\n\r\nconst app = {\r\n  type      : 'object',\r\n  properties: {\r\n    publicKeys: {\r\n      type       : 'array',\r\n      uniqueItems: true,\r\n    },\r\n    storage: {\r\n      type      : 'object',\r\n      required  : ['get', 'set', 'remove', 'clear'],\r\n      properties: {\r\n        get   : type.func,\r\n        set   : type.func,\r\n        remove: type.func,\r\n        clear : type.func\r\n      },\r\n      additionalProperties: true\r\n    }\r\n  },\r\n  additionalProperties: false\r\n}\r\n\r\nconst api = {\r\n  type      : 'object',\r\n  required  : ['layer', 'api_id'],\r\n  properties: {\r\n    invokeWithLayer: type.num,\r\n    layer          : type.num,\r\n    initConnection : type.num,\r\n    api_id         : type.num,\r\n    device_model   : type.str,\r\n    system_version : type.str,\r\n    app_version    : type.str,\r\n    lang_code      : type.str\r\n  },\r\n  additionalProperties: false\r\n}\r\n\r\nconst dc = {\r\n  type      : 'object',\r\n  required  : ['id', 'host'],\r\n  properties: {\r\n    id  : type.num,\r\n    host: type.str,\r\n    port: type.num\r\n  },\r\n  additionalProperties: false\r\n}\r\n\r\nconst server = {\r\n  type      : 'object',\r\n  properties: {\r\n    dev     : type.bool,\r\n    webogram: type.bool,\r\n    dcList  : {\r\n      type       : 'array',\r\n      uniqueItems: true,\r\n      items      : dc\r\n    }\r\n  },\r\n  additionalProperties: false\r\n}\r\n\r\nconst schema = {\r\n  properties: {\r\n    app,\r\n    api,\r\n    server,\r\n    schema  : type.obj,\r\n    mtSchema: type.obj\r\n  },\r\n  additionalProperties: false\r\n}\r\n\r\nconst ajv = new Ajv()\r\nAjvKeys(ajv)\r\nconst validate = ajv.compile(schema)\r\n\r\nconst configValidator = config => {\r\n  const valid = validate(config)\r\n  if (!valid) {\r\n    console.log('config errors')\r\n    validate.errors.map(printObj)\r\n    throw new Error('wrong config fields')\r\n  }\r\n}\r\n\r\nconst canDir = propIs(Function, 'dir', console)\r\nconst printObj = canDir\r\n  ? (arg) => console.dir( arg, { colors: true })\r\n  : (arg) => console.log(arg)\r\n\r\n\r\nexport default configValidator"]}