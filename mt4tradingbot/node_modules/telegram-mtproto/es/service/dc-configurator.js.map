{"version":3,"sources":["../../src/service/dc-configurator.js"],"names":["has","propEq","find","pipe","prop","sslSubdomains","devDC","id","host","port","prodDC","portString","findById","chooseServer","chosenServers","dev","webogram","dcList","dcID","upload","choosen","chosenServer","subdomain","path","dcOption"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,IAAMC,gBAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,OAA7B,EAAsC,OAAtC,CAAtB;;AAEA,IAAMC,QAAQ,CACZ,EAAEC,IAAI,CAAN,EAASC,MAAM,gBAAf,EAAkCC,MAAM,EAAxC,EADY,EAEZ,EAAEF,IAAI,CAAN,EAASC,MAAM,gBAAf,EAAkCC,MAAM,EAAxC,EAFY,EAGZ,EAAEF,IAAI,CAAN,EAASC,MAAM,iBAAf,EAAkCC,MAAM,EAAxC,EAHY,CAAd;;AAMA,IAAMC,SAAS,CACb,EAAEH,IAAI,CAAN,EAASC,MAAM,gBAAf,EAAkCC,MAAM,EAAxC,EADa,EAEb,EAAEF,IAAI,CAAN,EAASC,MAAM,gBAAf,EAAkCC,MAAM,EAAxC,EAFa,EAGb,EAAEF,IAAI,CAAN,EAASC,MAAM,iBAAf,EAAkCC,MAAM,EAAxC,EAHa,EAIb,EAAEF,IAAI,CAAN,EAASC,MAAM,gBAAf,EAAkCC,MAAM,EAAxC,EAJa,EAKb,EAAEF,IAAI,CAAN,EAASC,MAAM,eAAf,EAAkCC,MAAM,EAAxC,EALa,CAAf;;AAQA,IAAME,aAAa,CAAC,EAAEF,OAAO,EAAT,EAAD,KAAmBA,SAAS,EAAT,GAClC,EADkC,GAEjC,IAAGA,IAAK,EAFb;;AAIA,IAAMG,WAAWT,KAAMF,OAAO,IAAP,CAAN,EAAoBC,IAApB,CAAjB;;AAEA,OAAO,IAAMW,eAAe,CAACC,aAAD,EAAgB;AAC1CC,QAAM,KADoC;AAE1CC,aAAW,KAF+B;AAG1CC,WAASF,MACLT,KADK,GAELI;AALsC,IAMtC,EANsB,KAO1B,CAACQ,IAAD,EAAOC,SAAS,KAAhB,KAA0B;AACxB,MAAMC,UAAUhB,KAAKc,IAAL,CAAhB;AACA,MAAIlB,IAAIkB,IAAJ,EAAUJ,aAAV,CAAJ,EAA8B,OAAOM,QAAQN,aAAR,CAAP;AAC9B,MAAIO,eAAe,KAAnB;;AAGA,MAAIL,QAAJ,EAAc;AACZ,QAAMM,YAAYjB,cAAca,OAAO,CAArB,KAA2BC,SAAS,IAAT,GAAgB,EAA3C,CAAlB;AACA,QAAMI,OAAOR,MACT,YADS,GAET,OAFJ;AAGAM,mBAAgB,WAAWC,SAAW,qBAAqBC,IAAM,EAAjE;AACA,WAAOF,YAAP,CANY,CAMQ;AACrB;AACD,MAAMG,WAAWZ,SAASM,IAAT,EAAeD,MAAf,CAAjB;AACA,MAAIO,QAAJ,EACEH,eAAgB,UAAUG,SAAShB,IAAM,GAAEG,WAAWa,QAAX,CAAqB,QAAhE;AACFV,gBAAcI,IAAd,IAAsBG,YAAtB;;AAEA,SAAOD,QAAQN,aAAR,CAAP;AACD,CA3BI","file":"dc-configurator.js","sourcesContent":["import has from 'ramda/src/has'\r\nimport propEq from 'ramda/src/propEq'\r\nimport find from 'ramda/src/find'\r\nimport pipe from 'ramda/src/pipe'\r\nimport prop from 'ramda/src/prop'\r\n\r\nconst sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora']\r\n\r\nconst devDC = [\r\n  { id: 1, host: '149.154.175.10',  port: 80 },\r\n  { id: 2, host: '149.154.167.40',  port: 80 },\r\n  { id: 3, host: '149.154.175.117', port: 80 }\r\n]\r\n\r\nconst prodDC = [\r\n  { id: 1, host: '149.154.175.50',  port: 80 },\r\n  { id: 2, host: '149.154.167.51',  port: 80 },\r\n  { id: 3, host: '149.154.175.100', port: 80 },\r\n  { id: 4, host: '149.154.167.91',  port: 80 },\r\n  { id: 5, host: '149.154.171.5',   port: 80 }\r\n]\r\n\r\nconst portString = ({ port = 80 }) => port === 80\r\n  ? ''\r\n  : `:${port}`\r\n\r\nconst findById = pipe( propEq('id'), find )\r\n\r\nexport const chooseServer = (chosenServers, {\r\n  dev = false,\r\n  webogram = false,\r\n  dcList = dev\r\n    ? devDC\r\n    : prodDC\r\n  } = {}) =>\r\n  (dcID, upload = false) => {\r\n    const choosen = prop(dcID)\r\n    if (has(dcID, chosenServers)) return choosen(chosenServers)\r\n    let chosenServer = false\r\n\r\n\r\n    if (webogram) {\r\n      const subdomain = sslSubdomains[dcID - 1] + (upload ? '-1' : '')\r\n      const path = dev\r\n        ? 'apiw_test1'\r\n        : 'apiw1'\r\n      chosenServer = `https://${ subdomain }.web.telegram.org/${ path }`\r\n      return chosenServer //TODO Possibly bug. Isn't it necessary? chosenServers[dcID] = chosenServer\r\n    }\r\n    const dcOption = findById(dcID)(dcList)\r\n    if (dcOption)\r\n      chosenServer = `http://${ dcOption.host }${portString(dcOption)}/apiw1`\r\n    chosenServers[dcID] = chosenServer\r\n\r\n    return choosen(chosenServers)\r\n  }"]}